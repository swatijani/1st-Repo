install.packages("swirl")
library("swirl")
swirl()
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorn(1000)
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) &x > 0]
x[3]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo =11, bar = 2, norf = nA)
vect <- c(foo =11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
Sys.Date()
mean(c(2,4,5))
submit()
boring_function()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
bye()
titanic_original <- read.table("~/Documents/DW/DW_2/titanic_original.csv", header=TRUE, quote="\"")
View(titanic_original)
install.packages(c("jsonlite", "lazyeval", "nlme", "openssl", "plyr", "stringi", "survival", "tidyr"))
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
titanic_original <- read.table("~/Documents/DW/DW_2/titanic_original.csv", header=TRUE, quote="\"")
View(titanic_original)
titanic_original <- read.table("~/Documents/DW/DW_2/titanic_original.csv", header=TRUE, quote="\"")
View(titanic_original)
titanic_original
refine_original <- read.csv("~/Downloads/refine_original.csv")refine_original <- read.csv("~/Downloads/refine_original.csv")
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv")
View(titanic_original)
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv", comment.char="#", stringsAsFactors=FALSE)
View(titanic_original)
warnings()
titanic_original <- read.table("~/Documents/DW/DW_2/titanic_original.csv", encoding="UCS-2LE", header=TRUE, quote="\"")
View(titanic_original)
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv")
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv")
titanic_original <- read.table("~/Documents/DW/DW_2/titanic_original.csv", encoding="UTF-8", header=TRUE, quote="\"")
View(titanic_original)
guess_encoding(titanic_original)
titanic <- read.csv("~/Documents/DW/DW_2/titanic_original.xls")
titanic <- read.csv("~/Documents/DW/DW_2/titanic_original.csv")
titanic_original <- read.table("~/Downloads/titanic_original.csv", header=TRUE, quote="\"")
View(titanic_original)
titanic_original <- read.delim("~/Downloads/titanic_original.csv", comment.char="#")
View(titanic_original)
titanic_original <- read.table("~/Downloads/titanic_original.csv", header=TRUE, quote="\"", stringsAsFactors=FALSE)
View(titanic_original)
titanic_original <- read.csv("~/Downloads/titanic_original.csv", comment.char="#")
View(titanic_original)
install.packages("readr")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?guess_encoding
guess_encoding("~/Downloads/titanic_original.csv")
guess_encoding("~/Downloads/titanic_original.csv", n_max=10)
guess_encoding("~/Downloads/titanic_original.csv", n_max=10, threshold = 0.1)
guess_encoding("~/Downloads/titanic_original.csv", n_max=10, threshold = 0.5)
titanic_original <- read.table("~/Downloads/titanic_original.csv", encoding="WINDOWS-1250", header=TRUE, quote="\"")
View(titanic_original)
titanic_original <- read.csv("~/Downloads/titanic_original.csv", encoding="WINDOWS-1252", comment.char="#")
View(titanic_original)
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.xls", encoding="UTF-8", comment.char="#")
View(titanic_original)
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv", encoding="UTF-8", comment.char="#")
View(titanic_original)
guess_encoding("~/Documents/DW/DW_2/titanic_original.csv", n_max=10, threshold = 0.5)
guess_encoding("~/Documents/DW/DW_2/titanic_original.csv", n_max=10, threshold = 0.2)
guess_encoding("~/Documents/DW/DW_2/titanic_original.csv", n_max=100, threshold = 0.2)
titanic_original <- read.csv("~/Documents/DW/DW_2/titanic_original.csv", encoding="WINDOWS-1252", comment.char="#")
View(titanic_original)
setwd("~/Documents/DW/DW_2")
source('~/Documents/DW/DW_2/Untitled.R')
titanic_original <- read.csv("titanic_original.csv")
data_path <- "~/Documents/DW/DW_2"
View(titani_original)
View(titanic_original)
getwd()
titanic_original <- read.csv("titanic.csv")
View(titanic)
View(titanic_original)
refine_original <- read.csv("~/Downloads/refine_original.csv")
View(refine_original)
df <- refine_original
company_name <- c("philips", "akzo", "unilever", "van houten")
df1 <- df %>% mutate(company = tolower(company), first = substr(company,1,1))
df <- df1 %>% filter(first == "p" | first == "f'") %>% mutate (company = company_names[1])
company_initials <- c("p","a","u","v")
for (j in 2:4){df2 <- df1 %>% filter(first == company_initials[j]) %>% mutate(company = company_names[j])
df <- rbind(df, df2)}
df$first <- NULL
df <- df %>% separate(Product.code...number, c("product_code", "product_number"), sep = '-')
category <- list(p = 'Smartphone', v = 'TV', x = 'Laptop', q = 'Tablet')
df <- df %>% mutate(product_category = paste0(category[product_code]))
df <- df %>% mutate(full_address = paste(address, city, country, sep = ","))
for (k  in 1:4) {
comp <- company_name[k]
dummy_var1 <- paste("company", comp, sep ="_")
df[[paste0(dummy_var1)]]<- as.numeric(df$company == paste0(comp))
}
for (l in 1:4) {
product <- category[l]
dummy_var2 <- paste("product", product, sep = "_")
df[[paste0(dummy_var2)]]<- as.numeric((df$product_category == paste0(product)))
}
write.csv(df, file = "refine_clean.csv")
getwd()
setwd(/Users/Swati/Documents/DW/DW_1)
setwd("/Users/Swati/Documents/DW/DW_1")
getwd
refine_original <- read.csv("~/Downloads/refine_original.csv")
View(refine_original)
df <- refine_original
company_name <- c("philips", "akzo", "unilever", "van houten")
df1 <- df %>% mutate(company = tolower(company), first = substr(company,1,1))
df <- df1 %>% filter(first == "p" | first == "f'") %>% mutate (company = company_names[1])
company_initials <- c("p","a","u","v")
for (j in 2:4){df2 <- df1 %>% filter(first == company_initials[j]) %>% mutate(company = company_names[j])
df <- rbind(df, df2)}
df$first <- NULL
df <- df %>% separate(Product.code...number, c("product_code", "product_number"), sep = '-')
category <- list(p = 'Smartphone', v = 'TV', x = 'Laptop', q = 'Tablet')
df <- df %>% mutate(product_category = paste0(category[product_code]))
df <- df %>% mutate(full_address = paste(address, city, country, sep = ","))
for (k  in 1:4) {
comp <- company_name[k]
dummy_var1 <- paste("company", comp, sep ="_")
df[[paste0(dummy_var1)]]<- as.numeric(df$company == paste0(comp))
}
for (l in 1:4) {
product <- category[l]
dummy_var2 <- paste("product", product, sep = "_")
df[[paste0(dummy_var2)]]<- as.numeric((df$product_category == paste0(product)))
}
write.csv(df, file = "refine_clean.csv")
getwd
getwd()
refine_original <- read.csv("~/Documents/DW/DW_1/refine_original.csv")
View(refine_original)
df <- refine_original
company_name <- c("philips", "akzo", "unilever", "van houten")
df1 <- df %>% mutate(company = tolower(company), first = substr(company,1,1))
df <- df1 %>% filter(first == "p" | first == "f'") %>% mutate (company = company_names[1])
company_initials <- c("p","a","u","v")
for (j in 2:4){df2 <- df1 %>% filter(first == company_initials[j]) %>% mutate(company = company_names[j])
df <- rbind(df, df2)}
df$first <- NULL
df <- df %>% separate(Product.code...number, c("product_code", "product_number"), sep = '-')
category <- list(p = 'Smartphone', v = 'TV', x = 'Laptop', q = 'Tablet')
df <- df %>% mutate(product_category = paste0(category[product_code]))
df <- df %>% mutate(full_address = paste(address, city, country, sep = ","))
for (k  in 1:4) {
comp <- company_name[k]
dummy_var1 <- paste("company", comp, sep ="_")
df[[paste0(dummy_var1)]]<- as.numeric(df$company == paste0(comp))
}
for (l in 1:4) {
product <- category[l]
dummy_var2 <- paste("product", product, sep = "_")
df[[paste0(dummy_var2)]]<- as.numeric((df$product_category == paste0(product)))
}
write.csv(df, file = "refine_clean.csv")
